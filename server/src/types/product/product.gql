type Product {
    id: ID
    name: String
    price: Price
    description: String
    code: String
    stock: Int
    available: Boolean
    publish: ProductPublish
    listOfImages: [String]
    purchaseLimit: Int
    listOfTags: [String]
}

type ProductPublish{
    date: String
    month: String
}

input ProductInput {
    name: String!
    price: PriceInput!
    description: String!
    code: String!
    stock: Int!
    purchaseLimit: Int!
    available: Boolean!
    publish: ProductPublishInput!
    listOfImages: [String!]!
    listOfTags: [String!]!
}

input ProductPublishInput {
    date: String!
}


type Price{
    amount: Float
    currency: String
}

input PriceInput{
    amount: Float!
    currency: String!
}

extend type Query {
    queryAllAvailableProducts: [Product!]
    queryListOfProducts:[Product]
    queryProductById(input: ID!): Product
}

extend type Mutation {
    createProduct(input: ProductInput!) : Product
    updateProduct(input: ID!, input: ProductInput) : Product
    deleteProduct(input: ID! ): String
}


