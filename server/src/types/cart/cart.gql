type Cart {
    id: ID
    idUser: ID
    Status: String
    listOfProducts: [CartProducts!]
    timeout: Int
}

type CartProducts {
    id: ID
    code: String
    quantity: Int
    price: Price
    name: String
    thumbnail: String
    purchaseLimit: Int
}

#---------------------------------------------------------------------------

input CartInput{
    listOfProducts: [CartProductInput!]!
}

input CartProductInput{
    id: ID!
    quantity: Int!
    name: String!
    price: PriceInput!
    thumbnail: String!
    purchaseLimit: Int!
}

input DeleteCartInput{
    idUser: String
}

#---------------------------------------------------------------------------

type MyCart{
    status: String
    message: String
    cart: Cart
}

type InvalidCart{
    status: String
    message: String
    listOfErrors: [String]
}

type DeletedCart{
    status: String
    message: String

}

#---------------------------------------------------------------------------

union CartResult = MyCart | InvalidCart | DeletedCart

#---------------------------------------------------------------------------
extend type Mutation {
    updateCart(input: CartInput!): CartResult
    deleteCart: CartResult
}

extend type Query {
    queryCartWithToken: CartResult
}
