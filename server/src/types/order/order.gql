type Order{
    id: ID
    listOfProducts: [ProductOrder!]!
    shipping: String!
    total: Float!
    address: AddressName!
    status: OrderStatus!
}

type ProductOrder{
    id: ID
    idProduct: ID!
    amount: Int
}

input ProductOrderInput{
    id: ID
    idProduct: ID!
    amount: Int
}

input OrderInput{
    id: ID
    listOfProducts: [ProductOrderInput!]!
    shipping: String!
    total: Float!
    address: AddressName!
    status: OrderStatus!
}

enum OrderStatus{
    PENDING
    IN_TRANSIT
    COMPLETED
    CANCELED
}

extend type Query{
    queryOrder(input: ID!): Order
}

extend type Mutation {
    createOrder(input: OrderInput): Order
    updateOrder(input: ID!): Order
}
