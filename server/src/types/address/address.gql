type MapOfAddresses{
    primary: Address
    secondary: Address
}

input MapOfAddressesInput{
    primary: AddressInput!
    secondary: AddressInput
}

type Address {
    city: String
    state: String
    country: String
    zipcode: String
    neighbourhood: String
    street: String
    buildingNumber: String
    apartmentNumber: String
}

enum AddressName{
    primary
    secondary
}

input AddressInput {
    city: String!
    state: String!
    country: String!
    zipcode: String!
    neighbourhood: String!
    street: String!
    buildingNumber: String!
    apartmentNumber: String
}

extend type Query {
    queryMapOfAddresses: MapOfAddresses
}

extend type Mutation{
    updateAddress(idUser: ID!, addressName: String!, addressInput: AddressInput!): User
}

